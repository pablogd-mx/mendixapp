trigger:
- main
variables:
  APPNAME: "ado-dockerbuildpack"
  
  DOCKER_TLS_CERTDIR: ""
  TAG: "1.2"
  DOCKER_HOST: tcp://docker:2375
  IMAGE_NAME: "ado"
  #NAMESPACE: ""
  #DOMAINNAME: ""
  DOCKER_BUILDPACK_URL: https://github.com/mendix/docker-mendix-buildpack/archive/refs/tags/v3.5.2.zip

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
    - job: build
      steps:
      - script: 
          sudo apt install curl zip unzip tar bzip2 -y; 
          wget -O buildpack.zip $(DOCKER_BUILDPACK_URL);
          unzip buildpack.zip;
          sudo mv docker-mendix-buildpack*/* . ;
          sudo docker build --build-arg BUILD_PATH=. -t $(REGISTRY_URL)/$IMAGE_NAME:$TAG . ;
          sudo docker login $(REGISTRY_URL) --username=$(REGISTRY_USER) --password=$(REGISTRY_PASSWORD);
          sudo docker push $(REGISTRY_URL)/$IMAGE_NAME:$TAG;


     
    - job: deployonK8s
      dependsOn: build
      steps:
      - task: KubectlInstaller@0
        displayName: Kubectl installer
        inputs: 
          kubectlVersion: latest
   
      # - task: Kubernetes@1
      #   displayName: "Creating secret for registry"
      #   inputs:
      #     connectionType: 'Kubernetes Service Connection'
      #     kubernetesServiceEndpoint: 'aks-cluster'
      #     namespace: 'mendix-app'
      #     command: 'create'
      #     arguments: 'secret docker-registry mendix-registry-secret --docker-server=$(REGISTRY_URL) --docker-username=$(REGISTRY_USER) --docker-password=$(REGISTRY_PASSWORD) --dry-run=client '
      #     outputFormat: yaml

# Create Secret for DB endpoint
      # - task: Kubernetes@1
      #   displayName: "Creating Secret for Database Connection"
      #   inputs:
      #     connectionType: 'Kubernetes Service Connection'
      #     kubernetesServiceEndpoint: 'aks-cluster'
      #     namespace: 'mendix-app'
      #     command: 'create'
      #     arguments: 'secret generic mendix-$(APPNAME) --from-literal=$(ADMIN_USER)=$(DB_ENDPOINT) --dry-run=client '
      #     outputFormat: yaml
     
      - script: 
         kubectl get pods -A;
         kubectl secret generic mendix-$(APPNAME) --from-literal=$(ADMIN_USER)=$(DB_ENDPOINT) --dry-run=client -o yaml | kubectl apply -f -
         echo $(REGISTRY_URL)\/$(IMAGE_NAME):$(TAG);
         sed -i "s/{{APPNAME}}/$(APPNAME)/g" deployment.yaml;
         sed -i "s/{{DOMAINNAME}}/$(DOMAINNAME)/g" deployment.yaml;
         cat deployment.yaml;
  #sed -i "s/{{IMAGE_URL}}/$(REGISTRY_URL)\/$(IMAGE_NAME):$(TAG)/g" deployment.yaml;
      - task: Kubernetes@1
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: 'aks-cluster'
          namespace: 'mendix-app'
          command: 'apply'
          useConfigurationFile: true
          configuration: 'deployment.yaml'
          outputFormat: none
   
    #  secretType: 'dockerRegistry'
    #       containerRegistryType: 'Container Registry'
    #       dockerRegistryEndpoint: 'quay-docker-registry'
    #       secretName: 'mendix-registry-secret'
          
        #  kubectl apply -f deploy.yaml -n ${K8S_CLUSTER_NAMESPACE}
